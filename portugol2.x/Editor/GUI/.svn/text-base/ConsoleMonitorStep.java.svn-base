/*****************************************************************************/
/****     Copyright (C) 2006                                              ****/
/****     António Manuel Rodrigues Manso                                  ****/
/****     e-mail: manso@ipt.pt                                            ****/
/****     url   : http://orion.ipt.pt/~manso    manso@ipt.pt              ****/
/****     Instituto Politécnico de Tomar                                  ****/
/****     Escola Superior de Tecnologia de Tomar                          ****/
/*****************************************************************************/
 /*
  * ConsoleMonitorStep.java
  *
  * Created on 11 de Outubro de 2005, 17:26
  */

package Editor.GUI;

import Editor.GUI.CodeDocument.AlgoCodeStyle;
import Editor.GUI.Dialogs.Message;
import Portugol.Language.Make.Fluxogram;
import Portugol.Language.Make.NodeInstruction;
import Portugol.Language.Parse.Keyword;
import Portugol.Language.Parse.Symbol;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Rectangle;
import javax.swing.JLabel;



/**
 *
 * @author António M@nuel Rodrigues M@nso<br>
 * Departamento de Engenharia Informática<br>
 * Escola Superior de Tecnologia de Tomar<br>
 * Intituto Politécnico de Tomar<br>
 * Estrada da Serra<br>
 * 2350 - Tomar - Portugal<br>
 * <br>
 * Web site:  http://orion.ipt.pt/~manso/<br>
 * Email:     manso@ipt.pt <br>
 */
public class ConsoleMonitorStep extends javax.swing.JFrame implements Runnable  {
    
    /**
     * Creates new form ConsoleMonitorStep
     */ 
    
    Fluxogram prog;
    EditorPTG principal=null;
    NodeInstruction instruction;
    int timeToSleep = 300;
    int lineSelected=0;
    Thread autoExecute=null;
    
    
    public void run(){
        try{
            while(autoExecute != null )  {
                ExecuteLine();
                this.requestFocus();
                if( instruction.GetType() == Keyword.INICIO){
                    principal.DeSelectLine( lineSelected);
                    autoExecute = null;
                } else
                    autoExecute.sleep(timeToSleep);
            }
        }catch(Exception e){
            autoExecute = null;
        }
        
    }
    
    
    public ConsoleMonitorStep(EditorPTG parent, Fluxogram program ) {
        initComponents();
        principal = parent;
        prog = program;
        instruction = program.getStart();
        this.setBounds(new Rectangle(400,100,800,500));
        
    }
    private void DisplayMemory(){
        panelMemory.setVisible(false);
        panelMemory.removeAll();
        for( int index = 0 ; index< prog.memory.size() ; index++){
            Symbol var = (Symbol) prog.memory.get(index);
            Component  mv  = new MemoryVariable(var );
            panelMemory.add(mv);
        }
       //encostar as variaveis ao cimo do panel
        // introdzindo controlos em baixo        
        for(int i=0; i< 50; i++){                     
            panelMemory.add(new JLabel(" "));
        }
        
        panelMemory.setVisible(true);
    }
    
    private void ExecuteLine(){
        principal.DeSelectLine( lineSelected);
        lineSelected = instruction.GetCharNum();
        principal.SelectCodeLine( instruction.GetCharNum());
        this.TextArea.append( TextArea.getLineCount() + " : "+  instruction.GetIntruction() + "\n");
        TextArea.setCaretPosition( TextArea.getText().length() );
        
        try{
            instruction = prog.ExecuteLine(instruction, principal.console);
            this.requestFocus();
            DisplayMemory();
        }catch(Exception e){
            autoExecute = null;
        }
        
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jPopupMenu1 = new javax.swing.JPopupMenu();
        jSplitPane1 = new javax.swing.JSplitPane();
        panelLeft = new javax.swing.JPanel();
        jSplitPane2 = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        btRun = new javax.swing.JButton();
        btRunStep = new javax.swing.JButton();
        jsRunTimer = new javax.swing.JSlider();
        btExitRun = new javax.swing.JButton();
        panelMonitor = new javax.swing.JScrollPane();
        TextArea = new javax.swing.JTextArea();
        ScroolPanelMemory = new javax.swing.JScrollPane();
        panelMemory = new javax.swing.JPanel();

        setTitle("Executa e Monitora");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowDeactivated(java.awt.event.WindowEvent evt) {
                formWindowDeactivated(evt);
            }
        });

        jSplitPane1.setDividerLocation(300);
        jSplitPane1.setDividerSize(2);
        panelLeft.setLayout(new java.awt.BorderLayout());

        jSplitPane2.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        jSplitPane2.setEnabled(false);
        jPanel1.setLayout(new java.awt.GridLayout(3, 0, 3, 3));

        jPanel1.setMinimumSize(new java.awt.Dimension(200, 50));
        jPanel5.setLayout(new java.awt.GridLayout(1, 0));

        btRun.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/toolbar/program_next_step.png")));
        btRun.setText("50%");
        btRun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRunActionPerformed(evt);
            }
        });

        jPanel5.add(btRun);

        btRunStep.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/toolbar/program_pause_step.png")));
        btRunStep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRunStepActionPerformed(evt);
            }
        });

        jPanel5.add(btRunStep);

        jPanel1.add(jPanel5);

        jsRunTimer.setMaximum(10);
        jsRunTimer.setValue(5);
        jsRunTimer.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jsRunTimerStateChanged(evt);
            }
        });

        jPanel1.add(jsRunTimer);

        btExitRun.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/toolbar/file_exit.png")));
        btExitRun.setText("Sair");
        btExitRun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExitRunActionPerformed(evt);
            }
        });

        jPanel1.add(btExitRun);

        jSplitPane2.setTopComponent(jPanel1);

        TextArea.setColumns(2);
        TextArea.setFont(new java.awt.Font("Courier New", 0, 14));
        TextArea.setRows(5);
        panelMonitor.setViewportView(TextArea);

        jSplitPane2.setRightComponent(panelMonitor);

        panelLeft.add(jSplitPane2, java.awt.BorderLayout.CENTER);

        jSplitPane1.setLeftComponent(panelLeft);

        panelMemory.setLayout(new javax.swing.BoxLayout(panelMemory, javax.swing.BoxLayout.Y_AXIS));

        panelMemory.setAutoscrolls(true);
        ScroolPanelMemory.setViewportView(panelMemory);

        jSplitPane1.setRightComponent(ScroolPanelMemory);

        getContentPane().add(jSplitPane1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void jsRunTimerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jsRunTimerStateChanged
        
        timeToSleep = 1000 - jsRunTimer.getValue()*100;
        this.btRun.setText(jsRunTimer.getValue()*10 + " %" );
        
    }//GEN-LAST:event_jsRunTimerStateChanged
    
    private void btRunStepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRunStepActionPerformed
        autoExecute = null;
        if( instruction.GetType() == Keyword.INICIO){
            principal.SelectTabUnderEditor(0);
            principal.console.Clear();
            TextArea.setText("");
        }
        
        principal.DeSelectLine( lineSelected);
        lineSelected = instruction.GetCharNum();
        principal.SelectCodeLine( instruction.GetCharNum());        
        this.TextArea.append( TextArea.getLineCount() + " : "+  instruction.GetIntruction() + "\n");
        this.TextArea.setCaretPosition( this.TextArea.getText().length());
        
        
        try{
            instruction = prog.Execute(instruction, principal.console);
            this.requestFocus();
            DisplayMemory();
        }catch(Exception e){
            this.requestFocus();
            Message.Error("ERRO de EXECUÇAO:\n"+
                    instruction.GetText() + "\n"
                    + e.getMessage());
        }
        
    }//GEN-LAST:event_btRunStepActionPerformed
    
    private void btExitRunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExitRunActionPerformed
        autoExecute = null;
        principal.DeSelectLine( lineSelected);
        principal.setEnabled(true);
        principal.requestFocus();
        dispose();
    }//GEN-LAST:event_btExitRunActionPerformed
    
    private void formWindowDeactivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowDeactivated
        //  this.btExitRunActionPerformed(null);
    }//GEN-LAST:event_formWindowDeactivated
    
    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        
    }//GEN-LAST:event_formWindowActivated
    
    private void btRunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRunActionPerformed
        
        if( instruction.GetType() == Keyword.INICIO ){
            principal.SelectTabUnderEditor(0);
            principal.console.Clear();
            TextArea.setText("");
        }
        if( autoExecute == null ){
            autoExecute = new Thread(this);
            autoExecute.start();
        }
        
        
    }//GEN-LAST:event_btRunActionPerformed
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane ScroolPanelMemory;
    private javax.swing.JTextArea TextArea;
    private javax.swing.JButton btExitRun;
    private javax.swing.JButton btRun;
    private javax.swing.JButton btRunStep;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JSplitPane jSplitPane2;
    private javax.swing.JSlider jsRunTimer;
    private javax.swing.JPanel panelLeft;
    private javax.swing.JPanel panelMemory;
    private javax.swing.JScrollPane panelMonitor;
    // End of variables declaration//GEN-END:variables
    
}
