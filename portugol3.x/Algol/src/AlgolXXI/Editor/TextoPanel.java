/*
 * TextoPanel.java
 *
 * Created on 15 de Abril de 2008, 16:08
 */
package AlgolXXI.Editor;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import javax.swing.JOptionPane;
import org.openide.util.Exceptions;

/**
 *
 * @author  Apocas
 */
public class TextoPanel extends javax.swing.JPanel {

    private ProgramaTopComponent topcomponent;
    private int type;
    private boolean compiled = false;

    /** Creates new form TextoPanel */
    public TextoPanel(ProgramaTopComponent programaf, int tipo) {
        this.topcomponent = programaf;
        initComponents();
        this.type = tipo;

        if (type == AlgolXXI.Editor.Utils.EditorUtils.JAVA) {
            texto.setEditable(true);
            botao_compila.setEnabled(true);
            botao_corre.setEnabled(true);
        }
    }

    /**
     * Modificar para a vari√°vel <texto>.
     * @param textof - String
     */
    void setTexto(String textof) {
        texto.setText(textof);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        texto = new javax.swing.JTextArea();
        botao_compila = new javax.swing.JButton();
        botao_corre = new javax.swing.JButton();

        texto.setColumns(20);
        texto.setEditable(false);
        texto.setFont(new java.awt.Font("Monospaced", 0, 15)); // NOI18N
        texto.setRows(5);
        texto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                textoKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(texto);

        botao_compila.setText(org.openide.util.NbBundle.getMessage(TextoPanel.class, "TextoPanel.botao_compila.text")); // NOI18N
        botao_compila.setToolTipText(org.openide.util.NbBundle.getMessage(TextoPanel.class, "TextoPanel.botao_compila.toolTipText")); // NOI18N
        botao_compila.setEnabled(false);
        botao_compila.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botao_compilaActionPerformed(evt);
            }
        });

        botao_corre.setText(org.openide.util.NbBundle.getMessage(TextoPanel.class, "TextoPanel.botao_corre.text")); // NOI18N
        botao_corre.setToolTipText(org.openide.util.NbBundle.getMessage(TextoPanel.class, "TextoPanel.botao_corre.toolTipText")); // NOI18N
        botao_corre.setEnabled(false);
        botao_corre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botao_correActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(156, Short.MAX_VALUE)
                .addComponent(botao_compila)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botao_corre))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 294, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 234, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botao_corre)
                    .addComponent(botao_compila)))
        );
    }// </editor-fold>//GEN-END:initComponents

private void botao_compilaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botao_compilaActionPerformed
    if (type == AlgolXXI.Editor.Utils.EditorUtils.JAVA) {
        try {
            FileWriter fstream = new FileWriter(topcomponent.getDisplayName().replace(".alg", "") + ".java");
            BufferedWriter out = new BufferedWriter(fstream);
            out.write(texto.getText());
            out.close();
            fstream.close();

            System.out.println("--->COMPILADOR<---\n");
            String[] parametros = {topcomponent.getDisplayName().replace(".alg", "") + ".java"};
            if (topcomponent.compilaJava(parametros) > 0) {
                JOptionPane.showMessageDialog(null, "O codigo java tem erros!\n---------\n" + readFile("compilador.debug"), "Erro", JOptionPane.ERROR_MESSAGE);
            } else {
                compiled = true;
                JOptionPane.showMessageDialog(null, "Sucesso!\nprograma.class criado na raiz do Portugol", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (IOException ex) {//GEN-LAST:event_botao_compilaActionPerformed
                Exceptions.printStackTrace(ex);
            }
        }
    }

    private String readFile(String filename) throws FileNotFoundException {
        String content = "";
        String line = null;
        FileReader input = new FileReader(filename);
        BufferedReader bufRead = null;
        try {
            bufRead = new BufferedReader(input);
            line = bufRead.readLine();
            while (line != null) {
                content = content + line;
                line = bufRead.readLine();
            }
            bufRead.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
        return content;
    }

private void botao_correActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botao_correActionPerformed
    if (isCompiled()) {
        try {
            Process process = Runtime.getRuntime().exec("java programa");
            InputStream is = process.getInputStream();
            InputStreamReader isr = new InputStreamReader(is);
            BufferedReader br = new BufferedReader(isr);
            String line;
            topcomponent.getConsole().writeLn("------------------\n" +
                    "A executar " + topcomponent.getDisplayName().replace(".alg", "") + ".java\n" +
                    "Java: " + System.getProperty("java.home") + "\n" +
                    "--->Inicio Execucao<---");

            while ((line = br.readLine()) != null) {
                topcomponent.getConsole().writeLn(line);
            }

            topcomponent.getConsole().writeLn("--->Fim Execucao<---");
        } catch (IOException ex) {
            Exceptions.printStackTrace(ex);
        }
        System.exit(0);
    } else {
        JOptionPane.showMessageDialog(null, "Codigo ainda nao foi compilado!", "Erro", JOptionPane.ERROR_MESSAGE);
    }
}//GEN-LAST:event_botao_correActionPerformed

private void textoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textoKeyPressed
    setCompiled(false);
}//GEN-LAST:event_textoKeyPressed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botao_compila;
    private javax.swing.JButton botao_corre;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea texto;
    // End of variables declaration//GEN-END:variables

    public boolean isCompiled() {
        return compiled;
    }

    public void setCompiled(boolean compiled) {
        this.compiled = compiled;
    }
}
